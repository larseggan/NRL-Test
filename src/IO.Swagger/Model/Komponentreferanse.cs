/* 
 * Nasjonalt Register over Luftfartshindre
 *
 * ## Autentisering Finn autoriserings token her: [https://nrl-test.kartverket.no/token/](https://nrl-test.kartverket.no/token/)   Trykk \"Authorize\" og skriv inn `Bearer <token>`  ## Kontakt oss Spørsmål kan sendes til [nrl@kartverket.no](mailto:nrl@kartverket.no) ## Annen dokumentasjon [Introduksjon til NRL](https://www.kartverket.no/geodataarbeid/nrl)   [SOSI-standardisert produktspesifikasjon - NRL rapportering](https://sosi.geonorge.no/produktspesifikasjoner/NRL-rapportering/)   [NRL - webklient](https://nrl-test.kartverket.no) 
 *
 * OpenAPI spec version: 0.6.59
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// Komponentreferanse
    /// </summary>
    [DataContract]
        public partial class Komponentreferanse :  IEquatable<Komponentreferanse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Komponentreferanse" /> class.
        /// </summary>
        /// <param name="kodesystemversjon">kodesystemversjon.</param>
        /// <param name="komponentkodesystem">komponentkodesystem.</param>
        /// <param name="komponentkodeverdi">komponentkodeverdi.</param>
        public Komponentreferanse(string kodesystemversjon = default(string), string komponentkodesystem = default(string), string komponentkodeverdi = default(string))
        {
            this.Kodesystemversjon = kodesystemversjon;
            this.Komponentkodesystem = komponentkodesystem;
            this.Komponentkodeverdi = komponentkodeverdi;
        }
        
        /// <summary>
        /// Gets or Sets Kodesystemversjon
        /// </summary>
        [DataMember(Name="kodesystemversjon", EmitDefaultValue=false)]
        public string Kodesystemversjon { get; set; }

        /// <summary>
        /// Gets or Sets Komponentkodesystem
        /// </summary>
        [DataMember(Name="komponentkodesystem", EmitDefaultValue=false)]
        public string Komponentkodesystem { get; set; }

        /// <summary>
        /// Gets or Sets Komponentkodeverdi
        /// </summary>
        [DataMember(Name="komponentkodeverdi", EmitDefaultValue=false)]
        public string Komponentkodeverdi { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Komponentreferanse {\n");
            sb.Append("  Kodesystemversjon: ").Append(Kodesystemversjon).Append("\n");
            sb.Append("  Komponentkodesystem: ").Append(Komponentkodesystem).Append("\n");
            sb.Append("  Komponentkodeverdi: ").Append(Komponentkodeverdi).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Komponentreferanse);
        }

        /// <summary>
        /// Returns true if Komponentreferanse instances are equal
        /// </summary>
        /// <param name="input">Instance of Komponentreferanse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Komponentreferanse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kodesystemversjon == input.Kodesystemversjon ||
                    (this.Kodesystemversjon != null &&
                    this.Kodesystemversjon.Equals(input.Kodesystemversjon))
                ) && 
                (
                    this.Komponentkodesystem == input.Komponentkodesystem ||
                    (this.Komponentkodesystem != null &&
                    this.Komponentkodesystem.Equals(input.Komponentkodesystem))
                ) && 
                (
                    this.Komponentkodeverdi == input.Komponentkodeverdi ||
                    (this.Komponentkodeverdi != null &&
                    this.Komponentkodeverdi.Equals(input.Komponentkodeverdi))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kodesystemversjon != null)
                    hashCode = hashCode * 59 + this.Kodesystemversjon.GetHashCode();
                if (this.Komponentkodesystem != null)
                    hashCode = hashCode * 59 + this.Komponentkodesystem.GetHashCode();
                if (this.Komponentkodeverdi != null)
                    hashCode = hashCode * 59 + this.Komponentkodeverdi.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
