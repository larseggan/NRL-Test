/* 
 * Nasjonalt Register over Luftfartshindre
 *
 * ## Autentisering Finn autoriserings token her: [https://nrl-test.kartverket.no/token/](https://nrl-test.kartverket.no/token/)   Trykk \"Authorize\" og skriv inn `Bearer <token>`  ## Kontakt oss Spørsmål kan sendes til [nrl@kartverket.no](mailto:nrl@kartverket.no) ## Annen dokumentasjon [Introduksjon til NRL](https://www.kartverket.no/geodataarbeid/nrl)   [SOSI-standardisert produktspesifikasjon - NRL rapportering](https://sosi.geonorge.no/produktspesifikasjoner/NRL-rapportering/)   [NRL - webklient](https://nrl-test.kartverket.no) 
 *
 * OpenAPI spec version: 0.6.59
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// EierApiDto
    /// </summary>
    [DataContract]
        public partial class EierApiDto :  IEquatable<EierApiDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EierApiDto" /> class.
        /// </summary>
        /// <param name="eierId">eierId.</param>
        /// <param name="orgnr">orgnr.</param>
        /// <param name="navn">navn.</param>
        public EierApiDto(Guid? eierId = default(Guid?), string orgnr = default(string), string navn = default(string))
        {
            this.EierId = eierId;
            this.Orgnr = orgnr;
            this.Navn = navn;
        }
        
        /// <summary>
        /// Gets or Sets EierId
        /// </summary>
        [DataMember(Name="eierId", EmitDefaultValue=false)]
        public Guid? EierId { get; set; }

        /// <summary>
        /// Gets or Sets Orgnr
        /// </summary>
        [DataMember(Name="orgnr", EmitDefaultValue=false)]
        public string Orgnr { get; set; }

        /// <summary>
        /// Gets or Sets Navn
        /// </summary>
        [DataMember(Name="navn", EmitDefaultValue=false)]
        public string Navn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EierApiDto {\n");
            sb.Append("  EierId: ").Append(EierId).Append("\n");
            sb.Append("  Orgnr: ").Append(Orgnr).Append("\n");
            sb.Append("  Navn: ").Append(Navn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EierApiDto);
        }

        /// <summary>
        /// Returns true if EierApiDto instances are equal
        /// </summary>
        /// <param name="input">Instance of EierApiDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EierApiDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EierId == input.EierId ||
                    (this.EierId != null &&
                    this.EierId.Equals(input.EierId))
                ) && 
                (
                    this.Orgnr == input.Orgnr ||
                    (this.Orgnr != null &&
                    this.Orgnr.Equals(input.Orgnr))
                ) && 
                (
                    this.Navn == input.Navn ||
                    (this.Navn != null &&
                    this.Navn.Equals(input.Navn))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EierId != null)
                    hashCode = hashCode * 59 + this.EierId.GetHashCode();
                if (this.Orgnr != null)
                    hashCode = hashCode * 59 + this.Orgnr.GetHashCode();
                if (this.Navn != null)
                    hashCode = hashCode * 59 + this.Navn.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
